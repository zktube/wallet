def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.paytube.wallet.zkwallet"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 3
        versionName '1.0.0'
        multiDexEnabled true //突破应用方法数65535的一个限制
        externalNativeBuild {
            cmake {
                cppFlags ""
                abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
                targets 'native-lib'
            }
        }
        ndk {
            ldLibs "log"//实现__android_log_print
        }
        //必须要保证所有的flavor 都属于同一个维度
        flavorDimensions ""
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.release
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //移除lint检测的error
    lintOptions {
        abortOnError false
    }

    dexOptions {
        preDexLibraries = false
    }

    sourceSets.main {
        jniLibs.srcDirs = ['libs']
        jni.srcDirs = []
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation project(path: ':mvp')
    implementation project(path: ':library')
    implementation project(path: ':zxing')
    //图片选中和裁剪的
    implementation 'com.lqr.picselect:library:1.0.1'
    implementation 'com.lovedise:permissiongen:0.0.6'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.3@aar'
    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation "com.squareup.retrofit2:retrofit:2.2.0"
    implementation "com.squareup.retrofit2:converter-gson:2.2.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.2.0"
    implementation "com.trello.rxlifecycle2:rxlifecycle:2.0.1"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android:2.0.1"
    implementation "com.trello.rxlifecycle2:rxlifecycle-components:2.0.1"
    implementation "cn.bingoogolapple:bga-qrcode-core:1.3.7"
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
    implementation "com.github.bumptech.glide:glide:3.7.0"
    implementation "com.github.limedroid:XStateController:v1.1.1"
    implementation "com.google.code.gson:gson:2.6.2"
    implementation "com.squareup.okhttp3:logging-interceptor:3.4.2"
    implementation "com.squareup.okhttp3:okhttp:3.4.2"
//    implementation "com.android.support:cardview-v7:28.0.0"
    implementation "com.wang.avi:library:1.0.2"
    implementation "com.android.support:recyclerview-v7:28.0.0"
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'
    implementation "pl.droidsonroids.gif:android-gif-drawable:1.1.17"
    implementation files('libs\\tbs_sdk_thirdapp_v3.6.0.1249_43610_sharewithdownload_withoutGame_obfs_20180608_114954.jar')
    implementation 'com.android.support:cardview-v7:28+'
    compileOnly "org.reactivestreams:reactive-streams:1.0.0@jar"
}
